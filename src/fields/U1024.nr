use crate::BigNum;
use crate::BigNumParamsTrait;
use crate::runtime_bignum::BigNumInstance;
use crate::runtime_bignum::BigNumParamsTrait as RuntimeBigNumParamsTrait;
use crate::utils::u60_representation::U60Repr;
use crate::utils::arrayX::ArrayX;
use crate::utils::mul::schoolbook_mult;

struct U1024_Params {}
impl RuntimeBigNumParamsTrait<9> for U1024_Params {
    fn modulus_bits() -> u32 {
        1025
    }
    fn has_multiplicative_inverse() -> bool { false }
    fn mult(a: [Field; 18], b: [Field; 18]) -> ArrayX<Field, 18, 2> {
      schoolbook_mult(a, b)
    }
}
impl BigNumParamsTrait<9> for U1024_Params {
    fn get_instance() -> BigNumInstance<9, Self> {
        U1024_Instance
    }
    fn modulus_bits() -> u32 {
        1025
    }
    fn has_multiplicative_inverse() -> bool { false }
    fn mult(a: [Field; 18], b: [Field; 18]) -> ArrayX<Field, 18, 2> {
      schoolbook_mult(a, b)
    }
}
global U1024_Instance: BigNumInstance<9, U1024_Params> = BigNumInstance {
        modulus: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x010000000000000000
        ],
        double_modulus: [
            0x01000000000000000000000000000000, 0xffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffff, 0x01ffffffffffffffff
        ],
        modulus_u60: U60Repr { limbs: ArrayX { segments: [[
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10]] } },
        modulus_u60_x4: U60Repr { limbs: ArrayX { segments: [[
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10], [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]] } },
        redc_param: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x040000000000000000
        ]
};

